{"version":3,"file":"static/js/home-page.6e061048.chunk.js","mappings":"8LACA,EAAuB,6BAAvB,EAA2D,6BAA3D,EAAgG,8BAAhG,EAAoI,4BAApI,EAAwK,8BAAxK,EAA6M,6B,mBCoC7M,EA/BuB,SAAC,GAAwB,IAAtBA,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAC7BC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,eAAIC,UAAWC,EAAf,UACE,UAAC,KAAD,CACEC,GAAE,kBAAaP,GACfQ,MAAO,CAAEC,KAAMN,GACfE,UAAWC,EAHb,WAKE,gBAAKD,UAAWC,EAAhB,UACE,gBACEI,IAAKR,EAAG,0CAAsCA,GAAQS,EACtDC,IAAKX,EACLI,UAAWC,OAGf,gBAAKD,UAAWC,EAAhB,UACE,eAAID,UAAWC,EAAf,SAA8BL,a,oDCvBxC,MAAuB,yB,SCUvB,EARmB,SAAC,GAAkB,IAAhBY,EAAe,EAAfA,SACpB,OAAO,eAAIR,UAAWC,EAAf,SAA6BO,M,mGCHtC,EAAwB,wB,4BCMT,SAASC,IACtB,OAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,KAAgCC,MAAK,gBAAGC,EAAH,EAAGA,QAAH,OAAiBJ,EAAYI,QACjE,KAGD,4BACE,eAAIhB,UAAWC,EAAf,mCAECU,IACC,SAACM,EAAA,EAAD,UACGN,EAASO,KAAI,SAAAC,GAAK,OACjB,SAACC,EAAA,EAAD,CAEExB,MAAOuB,EAAMvB,MACbD,GAAIwB,EAAMxB,GACVE,IAAKsB,EAAME,aAHNF,EAAMxB,c,uLCtBnB2B,EAAQC,EAAQ,MAChBC,EAAU,mCACVC,EAAQ,+BAAd,SAEeX,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,6GAAyBY,EAAzB,+BAA+B,GAAIC,EAAnC,+BAA4C,GAA5C,SACyBL,EAAMM,IAAIF,EAAKC,GADxC,cACQE,EADR,gBAEqBA,EAASC,KAF9B,cAEQA,EAFR,yBAISA,GAJT,mEAOO,SAASC,IACd,OAAOjB,EAAU,GAAD,OAAIW,EAAJ,uCAA2CD,IAGtD,SAASQ,EAAkBC,GAChC,OAAOnB,EAAU,GAAD,OAAIW,EAAJ,kBAAsBQ,EAAtB,oBAAyCT,IAGpD,SAASU,EAAeD,GAC7B,OAAOnB,EAAU,GAAD,OACXW,EADW,kBACOQ,EADP,4BACkCT,EADlC,oBAKX,SAASW,EAAkBF,GAChC,OAAOnB,EAAU,GAAD,OACXW,EADW,kBACOQ,EADP,4BACkCT,EADlC,2BAKX,SAASY,EAAkBC,GAChC,OAAOvB,EAAU,GAAD,OACXW,EADW,kCACuBD,EADvB,kBACwCa,EADxC,iD","sources":["webpack://goit-react-hw-05-movies/./src/components/MoviesList/MoviesListItem/MoviesListItem.module.css?c6de","components/MoviesList/MoviesListItem/MoviesListItem.jsx","webpack://goit-react-hw-05-movies/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","webpack://goit-react-hw-05-movies/./src/pages/HomePage/HomePage.module.css?5baa","pages/HomePage/HomePage.jsx","services/movies-api.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"MoviesListItem_item__ovKV+\",\"link\":\"MoviesListItem_link__c0Ngz\",\"title\":\"MoviesListItem_title__Dn+pw\",\"img\":\"MoviesListItem_img__vtULT\",\"thumb\":\"MoviesListItem_thumb__Xc6jM\",\"meta\":\"MoviesListItem_meta__TGv+4\"};","import { NavLink, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styles from './MoviesListItem.module.css';\n\nimport noImage from '../../Img/no-image.png';\n\nconst MoviesListItem = ({ id, title, img }) => {\n  const location = useLocation();\n\n  return (\n    <li className={styles.item}>\n      <NavLink\n        to={`/movies/${id}`}\n        state={{ from: location }}\n        className={styles.link}\n      >\n        <div className={styles.thumb}>\n          <img\n            src={img ? `https://image.tmdb.org/t/p/w500/${img}` : noImage}\n            alt={title}\n            className={styles.img}\n          />\n        </div>\n        <div className={styles.meta}>\n          <h3 className={styles.title}>{title}</h3>\n        </div>\n      </NavLink>\n    </li>\n  );\n};\n\nMoviesListItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  img: PropTypes.string.isRequired,\n};\n\nexport default MoviesListItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MoviesList_list__0Owr9\"};","import PropTypes from 'prop-types';\nimport styles from './MoviesList.module.css';\n\nconst MoviesList = ({ children }) => {\n  return <ul className={styles.list}>{children}</ul>;\n};\n\nMoviesList.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default MoviesList;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"HomePage_title__UFLA3\"};","import { useState, useEffect } from 'react';\nimport * as moviesApi from '../../services/movies-api';\nimport styles from './HomePage.module.css';\n\nimport MoviesList from 'components/MoviesList';\nimport MoviesListItem from 'components/MoviesList/MoviesListItem';\n\nexport default function Homepage() {\n  const [trending, setTrending] = useState([]);\n\n  useEffect(() => {\n    moviesApi.fetchTrendingMovies().then(({ results }) => setTrending(results));\n  }, []);\n\n  return (\n    <div>\n      <h2 className={styles.title}>Trending movies today</h2>\n\n      {trending && (\n        <MoviesList>\n          {trending.map(movie => (\n            <MoviesListItem\n              key={movie.id}\n              title={movie.title}\n              id={movie.id}\n              img={movie.poster_path}\n            />\n          ))}\n        </MoviesList>\n      )}\n    </div>\n  );\n}\n","const axios = require('axios');\nconst API_KEY = 'b8ac79d8f7dac57cb589d169a879527b';\nconst BASE_URL = `https://api.themoviedb.org/3`;\n\nasync function moviesApi(url = '', config = {}) {\n  const response = await axios.get(url, config);\n  const data = await response.data;\n\n  return data;\n}\n\nexport function fetchTrendingMovies() {\n  return moviesApi(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n}\n\nexport function fetchMovieDetails(movieId) {\n  return moviesApi(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`);\n}\n\nexport function fetchMovieCast(movieId) {\n  return moviesApi(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function fetchMovieReviews(movieId) {\n  return moviesApi(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n}\n\nexport function fetchSearchMovies(query) {\n  return moviesApi(\n    `${BASE_URL}/search/movie/?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n}\n"],"names":["id","title","img","location","useLocation","className","styles","to","state","from","src","noImage","alt","children","Homepage","useState","trending","setTrending","useEffect","moviesApi","then","results","MoviesList","map","movie","MoviesListItem","poster_path","axios","require","API_KEY","BASE_URL","url","config","get","response","data","fetchTrendingMovies","fetchMovieDetails","movieId","fetchMovieCast","fetchMovieReviews","fetchSearchMovies","query"],"sourceRoot":""}